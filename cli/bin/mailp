#!/usr/bin/env node

const concatStream = require("concat-stream");
const simpleParser = require('mailparser').simpleParser;
const moment = require('moment');
const chalk = require('chalk');

const RECEIVED_PATTERN = /^(?<direction>by|from) (?<source>.*); (?<date>.*)$/;

function handleReceivedHeader(received) {
    let data = received;
    if (!Array.isArray(received)) {
        data = [ received ];
    }
    data.forEach(item => {
        const matcher = item.match(RECEIVED_PATTERN);
        if (matcher) {
            const date = moment(matcher.groups['date']).toString();
            const source = matcher.groups['source'];
            // noinspection JSUnresolvedFunction
            console.log(`date: ${chalk.red(date)} - source: ${source}`);
        }
    });
    console.log(data);
}

// noinspection JSUnresolvedVariable
process.stdin.pipe(
    concatStream(function (buffer) {
        if (buffer.length > 0) {
            simpleParser(buffer, {})
                .then(parsed => {
                    console.log('-------- received \\');
                    const received = parsed.headers.get('received');
                    handleReceivedHeader(received);

                    console.log('-------- date header \\');
                    // noinspection JSUnresolvedFunction
                    const date = moment(parsed.headers.get('date')).toString();
                    console.log(chalk.red(date));

                    console.log('-------- all headers \\');
                    console.log(parsed.headers);
                })
                .catch(error => {
                    console.error(error);
                });
        }
    })
);
