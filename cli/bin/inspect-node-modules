#!/usr/bin/env node

/**
 * Copyright 2023 Hasnae Rehioui
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

const fs = require("fs");
const path = require("path");

const { listFiles } = require("fs-directory");
const minimist = require("minimist");

const argv = minimist(process.argv.slice(2));

if (argv._.length === 0) {
  console.info("needs explicit directories, will not run on cwd");
  process.exit(1);
}

const extractPostInstall = (filename) => {
  const data = fs.readFileSync(filename).toString();
  try {
    const packageInfo = JSON.parse(data);
    const scripts = packageInfo["scripts"];
    const postInstall = scripts ? scripts["postinstall"] : undefined;
    if (postInstall) {
      console.info("** inspect: ", filename);
      console.info({ postInstall });
    }
  } catch (error) {
    console.error("** failed inspection: ", {
      filename,
      error,
    });
  }
};

const directories = argv._.map((item) =>
  path.resolve(process.cwd(), item, "node_modules"),
);
const packages = directories.flatMap((directory) =>
  listFiles(directory, {
    fileFilter: (entry) => entry.name === "package.json",
    directoryFilter: () => true,
  }),
);

packages.forEach(extractPostInstall);
